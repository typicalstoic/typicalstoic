<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>